wb = xlsx_package.workbook
sasaran_kota = @pohon_sub
sub_sasaran_kota = @sub_sasaran_kota
rad_sasaran_kota = @rad_sasaran_kota

def rad_rows(sheet, rad)
  rad_view = SasaranKota::SasaranComponent.new(sasaran: rad, tahun: @tahun)
  pagu_rad = SasaranKota::ProgramPaguComponent.new(sasaran: rad)
  indikator_rad = rad_view.indikators

  current_rows = if indikator_rad.any?
                   indikator_rad.map do |ind|
                     sheet.add_row [rad_view.title_up, rad_view.renaksi] +
                                   [ind.indikator, ind.target, ind.satuan] +
                                   [pagu_rad.programs.first&.first,
                                    "Rp. #{number_with_delimiter(pagu_rad.programs.first&.last)}"] +
                                   [rad_view.keterangan, rad_view.opd]
                   end
                 else
                   pagu_rad.programs.each do |program|
                     sheet.add_row [rad_view.title_up, rad_view.renaksi] +
                                   ['-', '-', '-'] +
                                   [program&.first, "Rp. #{number_with_delimiter(program&.last)}"] +
                                   [rad_view.keterangan, rad_view.opd]
                   end
                 end

  size_of_sasaran = current_rows.map { |row| row.cells[0].value }
  return unless size_of_sasaran.size > 1

  merge_row_num = [0, 1, -1, -2, -3, -4]
  merge_row_num.each do |row_num|
    row_merger(sheet, current_rows, row_num)
  end
end

def row_merger(sheet, current_rows, row_num)
  the_rows = current_rows.map { |row| row.cells[row_num].r }
  sheet.merge_cells "#{the_rows[0]}:#{the_rows[-1]}"
end

wb.add_worksheet(name: "rad") do |sheet|
  sheet.add_row ['SASARAN KOTA', sasaran_kota.pohonable.sasaran_kotum]
  sasaran_kota.pohonable.indikators.each.with_index(1) do |indikator, index|
    sheet.add_row ["INDIKATOR #{sasaran_kota.pohonable.indikators.size > 1 ? index : ''}", indikator]
    sheet.add_row ['TARGET', indikator.target]
    sheet.add_row ['SATUAN', indikator.satuan]
  end
  sheet.add_row ['KETERANGAN', sasaran_kota.pohonable.keterangan]

  sub_sasaran_kota.each.with_index(1) do |_sub_sasaran_k, _no_sub|
    sheet.add_row
    header_rad = sheet.add_row ['RENCANA AKSI', '', 'INDIKATOR', 'TARGET', 'SATUAN', 'PROGRAM/KEGIATAN/SUB KEGIATAN', 'PAGU ANGGARAN', 'KETERANGAN',
                                'PERANGKAT DAERAH']
    sheet.merge_cells "#{header_rad[0].r}:#{header_rad[1].r}"
    # Urusan
  end

  sheet.add_row
  header_rad = sheet.add_row ['RENCANA AKSI', '', 'INDIKATOR', 'TARGET', 'SATUAN', 'PROGRAM/KEGIATAN/SUB KEGIATAN', 'PAGU ANGGARAN', 'KETERANGAN',
                              'PERANGKAT DAERAH']
  sheet.merge_cells "#{header_rad[0].r}:#{header_rad[1].r}"
  # Urusan
  rad_sasaran_kota.each do |rad1|
    rad_rows(sheet, rad1)
    # Program
    rad_view = SasaranKota::SasaranComponent.new(sasaran: rad1, tahun: @tahun)
    rad_view.sub_pohons.each do |rad2|
      rad_rows(sheet, rad2)
      # Kegiatan
      rad_view = SasaranKota::SasaranComponent.new(sasaran: rad2, tahun: @tahun)
      rad_view.sub_pohons.each do |rad3|
        rad_rows(sheet, rad3)
        # Subkegiatan
        rad_view = SasaranKota::SasaranComponent.new(sasaran: rad3, tahun: @tahun)
        rad_view.sub_pohons.each do |rad4|
          rad_rows(sheet, rad4)
        end
      end
    end
    sheet.add_row
  end
end
